# -*- coding: utf-8 -*-
"""Python2nd.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TNf6YAB8w6N89reNwGRo3U56X_yRxzaE

Q1:calculate and print the minimum maximum,sum,mean and standard deviation of an array
"""

import numpy as np
arr = np.array([1, 2, 3, 4, 5])
print("Minimum: ", np.min(arr))
print("Maximum: ", np.max(arr))
print("Sum: ", np.sum(arr))
# Calculate and print the mean standard deviation
print("Mean: ", np.mean(arr))
print("Standard Deviation: ", np.std(arr))

#Q2:
# health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

#QNO4
import numpy as np
start_temp = 15
end_temp = 25

# Number of measurements
num_measurements = 24
temperature_readings = np.linspace(start_temp, end_temp, num_measurements)

print(temperature_readings)

#Q6
import numpy as np
mean = [0, 0]
cov = [[1, 0.5], [0.5, 2]]

samples = np.random.multivariate_normal(mean, cov, 100)

print(samples)

#Q8:
import numpy as np
array = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print("Original Array:")
print(array)
#  filter out numbers greater than 5
filtered_array = array[array > 5]
print("Filtered Array:")
print(filtered_array)

#15
student_data = [
    {"StudentID": 1, "Subject": "Math", "Grade": 88},
    {"StudentID": 2, "Subject": "Science", "Grade": 92},
    {"StudentID": 3, "Subject": "History", "Grade": 85},
    {"StudentID": 4, "Subject": "Math", "Grade": 87},
    {"StudentID": 5, "Subject": "Science", "Grade": 90},
    {"StudentID": 6, "Subject": "History", "Grade": 82},
    {"StudentID": 7, "Subject": "Math", "Grade": 85},
    {"StudentID": 8, "Subject": "Science", "Grade": 91},
    {"StudentID": 9, "Subject": "History", "Grade": 84},
    {"StudentID": 10, "Subject": "Math", "Grade": 89}
]

subject_data = {}
for student in student_data:
    subject = student["Subject"]
    grade = student["Grade"]
    if subject not in subject_data:
        subject_data[subject] = {"total_grade": grade, "count": 1}
    else:
        subject_data[subject]["total_grade"] += grade
        subject_data[subject]["count"] += 1
for subject, data in subject_data.items():
    average_grade = data["total_grade"] / data["count"]
    print(f"The average grade for {subject} is {average_grade:.2f}")

#Q13
import pandas as pd

data = [
    {"TeamID": 1, "GamesPlayed": 10, "Wins": 7},
    {"TeamID": 2, "GamesPlayed": 10, "Wins": 6},
    {"TeamID": 3, "GamesPlayed": 10, "Wins": 8},
    {"TeamID": 4, "GamesPlayed": 10, "Wins": 5},
    {"TeamID": 5, "GamesPlayed": 10, "Wins": 9},
    {"TeamID": 6, "GamesPlayed": 10, "Wins": 6},
    {"TeamID": 7, "GamesPlayed": 10, "Wins": 7},
    {"TeamID": 8, "GamesPlayed": 10, "Wins": 4},
    {"TeamID": 9, "GamesPlayed": 10, "Wins": 9},
    {"TeamID": 10, "GamesPlayed": 10, "Wins": 5}
]

df = pd.DataFrame(data)
df['WinPercentage'] = df['Wins'] / df['GamesPlayed']
strengths = df[df['WinPercentage'] > 0.5]
weaknesses = df[df['WinPercentage'] <= 0.5]
print("Strengths:")
print(strengths)

print("\nWeaknesses:")
print(weaknesses)

#Q11

import pandas as pd

# Given data
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}

df = pd.DataFrame(data)
fruit_df = df[df['Category'] == 'Fruit']e
average_price = fruit_df['Price'].mean()
result = fruit_df[(fruit_df['Price'] > average_price) & (fruit_df['Promotion'] == False)]
# Print the result
print(result)

#Q7:









